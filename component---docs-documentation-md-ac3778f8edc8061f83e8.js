(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{ucoJ:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return r})),n.d(t,"default",(function(){return s}));n("5hJT"),n("W1QL"),n("K/PF"),n("t91x"),n("75LO"),n("PJhk");var a=n("SAVP"),o=n("TjRS");n("aD51");function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var r={};void 0!==r&&r&&r===Object(r)&&Object.isExtensible(r)&&!r.hasOwnProperty("__filemeta")&&Object.defineProperty(r,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/documentation.md"}});var l={_frontmatter:r},c=o.a;function s(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,["components"]);return Object(a.b)(c,i({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"documentation-practices"},"Documentation practices"),Object(a.b)("h2",{id:"what-should-readmemd-contain"},"What should README.md contain?"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Short description of what the service or product is"),Object(a.b)("li",{parentName:"ul"},"Installation instructions",Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},"How to run the software from the ready-made Docker image"),Object(a.b)("li",{parentName:"ul"},"Prerequisites"),Object(a.b)("li",{parentName:"ul"},"How to get the software up and running locally"),Object(a.b)("li",{parentName:"ul"},"Dependent services needed to run (pointers)"),Object(a.b)("li",{parentName:"ul"},"Configuration instructions"))),Object(a.b)("li",{parentName:"ul"},"How to enable debug output"),Object(a.b)("li",{parentName:"ul"},"Links to public information",Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},"Where the issue tracking is i.e. link to backlog"),Object(a.b)("li",{parentName:"ul"},"API documentation (OpenAPI / GraphiQL)"),Object(a.b)("li",{parentName:"ul"},"Whether builds are working or failing"),Object(a.b)("li",{parentName:"ul"},"Links to CI/CD and monitoring dashboards"))),Object(a.b)("li",{parentName:"ul"},"How to contribute to the software (PR and whom to contact if it's not getting merged), can be a separate CONTRIBUTING.md"),Object(a.b)("li",{parentName:"ul"},"Contact points, people responsible or a role (email?) address for its developers - e.g. service-dev@hel.fi."),Object(a.b)("li",{parentName:"ul"},"Open dev / test / staging / production environments (to try it out)",Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},'Frontend links to "normal user" and staff / admin user entry points'),Object(a.b)("li",{parentName:"ul"},"Backend links to interactive API browser (swagger/GraphiQL/Django's API browser)"))),Object(a.b)("li",{parentName:"ul"},"Connected services (dependents and dependees)")),Object(a.b)("h2",{id:"what-should-contributingmd-contain"},"What should CONTRIBUTING.md contain?"),Object(a.b)("p",null,"Example template:"),Object(a.b)("pre",null,Object(a.b)("code",i({parentName:"pre"},{}),"Contributions are accepted as pull requests.  Please observe our coding\npractices at https://github.com/City-of-Helsinki/bestpractice/ .\nPlease make your pull requests short, elegant and only handling one\nissue at a time!\n \nIf you make a pull request, you may also want to contact\n<INSERT SERVICE'S ROLE ADDRESS> to tell about your contribution.\n \nOur contribution handling guidelines are at\nhttps://github.com/City-of-Helsinki/bestpractice/blob/master/accepting-contributions.md\n")))}s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/documentation.md"}}),s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-documentation-md-ac3778f8edc8061f83e8.js.map